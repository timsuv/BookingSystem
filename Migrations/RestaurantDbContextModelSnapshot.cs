// <auto-generated />
using System;
using BookingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingSystem.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingSystem.Models.Administrator", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdminId");

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Password = "Admin1234!",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("BookingTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TableId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BookingSystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BookingSystem.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<string>("BildUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MenuItemId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            BildUrl = "https://example.com/images/antipasto.jpg",
                            Description = "Selection of cured meats, aged cheeses, olives, roasted peppers and artisanal bread",
                            IsPopular = true,
                            Name = "Antipasto della Casa",
                            Price = 185.00m
                        },
                        new
                        {
                            MenuItemId = 2,
                            BildUrl = "https://example.com/images/bruschetta.jpg",
                            Description = "Toasted sourdough topped with fresh tomatoes, basil, garlic and extra virgin olive oil",
                            IsPopular = true,
                            Name = "Bruschetta Classica",
                            Price = 95.00m
                        },
                        new
                        {
                            MenuItemId = 3,
                            BildUrl = "https://example.com/images/burrata.jpg",
                            Description = "Creamy burrata cheese served with Parma ham, arugula and aged balsamic reduction",
                            IsPopular = false,
                            Name = "Burrata con Prosciutto",
                            Price = 165.00m
                        },
                        new
                        {
                            MenuItemId = 4,
                            BildUrl = "https://example.com/images/carpaccio.jpg",
                            Description = "Thinly sliced raw beef with capers, arugula, Parmigiano-Reggiano and lemon",
                            IsPopular = false,
                            Name = "Carpaccio di Manzo",
                            Price = 195.00m
                        },
                        new
                        {
                            MenuItemId = 5,
                            BildUrl = "https://example.com/images/carbonara.jpg",
                            Description = "Traditional Roman pasta with guanciale, eggs, Pecorino Romano and black pepper",
                            IsPopular = true,
                            Name = "Spaghetti Carbonara",
                            Price = 175.00m
                        },
                        new
                        {
                            MenuItemId = 6,
                            BildUrl = "https://example.com/images/arrabbiata.jpg",
                            Description = "Spicy tomato sauce with garlic, red chili peppers and fresh basil",
                            IsPopular = false,
                            Name = "Penne all'Arrabbiata",
                            Price = 155.00m
                        },
                        new
                        {
                            MenuItemId = 7,
                            BildUrl = "https://example.com/images/alfredo.jpg",
                            Description = "Fresh fettuccine in rich butter and Parmigiano-Reggiano cream sauce",
                            IsPopular = true,
                            Name = "Fettuccine Alfredo",
                            Price = 165.00m
                        },
                        new
                        {
                            MenuItemId = 8,
                            BildUrl = "https://example.com/images/lasagne.jpg",
                            Description = "Traditional layered pasta with Bolognese ragu, béchamel and three cheeses",
                            IsPopular = true,
                            Name = "Lasagne della Nonna",
                            Price = 195.00m
                        },
                        new
                        {
                            MenuItemId = 9,
                            BildUrl = "https://example.com/images/vongole.jpg",
                            Description = "Fresh linguine with clams, white wine, garlic, parsley and cherry tomatoes",
                            IsPopular = false,
                            Name = "Linguine alle Vongole",
                            Price = 225.00m
                        },
                        new
                        {
                            MenuItemId = 10,
                            BildUrl = "https://example.com/images/risotto.jpg",
                            Description = "Creamy Arborio rice with wild porcini mushrooms, white wine and Parmigiano",
                            IsPopular = false,
                            Name = "Risotto ai Funghi Porcini",
                            Price = 215.00m
                        },
                        new
                        {
                            MenuItemId = 11,
                            BildUrl = "https://example.com/images/ossobuco.jpg",
                            Description = "Braised veal shanks in white wine and vegetables, served with saffron risotto",
                            IsPopular = true,
                            Name = "Osso Buco alla Milanese",
                            Price = 325.00m
                        },
                        new
                        {
                            MenuItemId = 12,
                            BildUrl = "https://example.com/images/saltimbocca.jpg",
                            Description = "Veal escalopes with prosciutto and sage in white wine sauce",
                            IsPopular = false,
                            Name = "Saltimbocca alla Romana",
                            Price = 285.00m
                        },
                        new
                        {
                            MenuItemId = 13,
                            BildUrl = "https://example.com/images/branzino.jpg",
                            Description = "Mediterranean sea bass baked in sea salt crust with herbs and lemon",
                            IsPopular = true,
                            Name = "Branzino in Crosta di Sale",
                            Price = 295.00m
                        },
                        new
                        {
                            MenuItemId = 14,
                            BildUrl = "https://example.com/images/parmigiana.jpg",
                            Description = "Breaded chicken breast with tomato sauce, mozzarella and Parmigiano-Reggiano",
                            IsPopular = true,
                            Name = "Pollo alla Parmigiana",
                            Price = 245.00m
                        },
                        new
                        {
                            MenuItemId = 15,
                            BildUrl = "https://example.com/images/fiorentina.jpg",
                            Description = "Traditional Tuscan T-bone steak grilled with rosemary, garlic and olive oil (700g)",
                            IsPopular = false,
                            Name = "Bistecca alla Fiorentina",
                            Price = 485.00m
                        },
                        new
                        {
                            MenuItemId = 16,
                            BildUrl = "https://example.com/images/margherita.jpg",
                            Description = "Classic Neapolitan pizza with San Marzano tomatoes, mozzarella di bufala and basil",
                            IsPopular = true,
                            Name = "Pizza Margherita",
                            Price = 145.00m
                        },
                        new
                        {
                            MenuItemId = 17,
                            BildUrl = "https://example.com/images/quattrostagioni.jpg",
                            Description = "Four seasons pizza with artichokes, mushrooms, ham and olives",
                            IsPopular = true,
                            Name = "Pizza Quattro Stagioni",
                            Price = 175.00m
                        },
                        new
                        {
                            MenuItemId = 18,
                            BildUrl = "https://example.com/images/diavola.jpg",
                            Description = "Spicy pizza with tomato, mozzarella, spicy salami and chili peppers",
                            IsPopular = false,
                            Name = "Pizza Diavola",
                            Price = 165.00m
                        },
                        new
                        {
                            MenuItemId = 19,
                            BildUrl = "https://example.com/images/prosciuttofunghi.jpg",
                            Description = "Pizza with tomato, mozzarella, prosciutto cotto and fresh mushrooms",
                            IsPopular = true,
                            Name = "Pizza Prosciutto e Funghi",
                            Price = 185.00m
                        },
                        new
                        {
                            MenuItemId = 20,
                            BildUrl = "https://example.com/images/tiramisu.jpg",
                            Description = "Traditional Italian dessert with mascarpone, coffee, cocoa and ladyfingers",
                            IsPopular = true,
                            Name = "Tiramisu della Casa",
                            Price = 95.00m
                        },
                        new
                        {
                            MenuItemId = 21,
                            BildUrl = "https://example.com/images/pannacotta.jpg",
                            Description = "Silky vanilla panna cotta with mixed berry compote",
                            IsPopular = true,
                            Name = "Panna Cotta ai Frutti di Bosco",
                            Price = 85.00m
                        },
                        new
                        {
                            MenuItemId = 22,
                            BildUrl = "https://example.com/images/cannoli.jpg",
                            Description = "Crispy pastry tubes filled with sweet ricotta, chocolate chips and pistachios",
                            IsPopular = false,
                            Name = "Cannoli Siciliani",
                            Price = 105.00m
                        },
                        new
                        {
                            MenuItemId = 23,
                            BildUrl = "https://example.com/images/gelato.jpg",
                            Description = "Three scoops of artisanal gelato: vanilla, chocolate, and seasonal fruit",
                            IsPopular = true,
                            Name = "Gelato Artigianale",
                            Price = 75.00m
                        },
                        new
                        {
                            MenuItemId = 24,
                            BildUrl = "https://example.com/images/affogato.jpg",
                            Description = "Vanilla gelato 'drowned' in hot espresso with amaretti biscuits",
                            IsPopular = false,
                            Name = "Affogato al Caffè",
                            Price = 65.00m
                        });
                });

            modelBuilder.Entity("BookingSystem.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Capacity = 2,
                            TableNumber = 1
                        },
                        new
                        {
                            TableId = 2,
                            Capacity = 4,
                            TableNumber = 2
                        },
                        new
                        {
                            TableId = 3,
                            Capacity = 6,
                            TableNumber = 3
                        },
                        new
                        {
                            TableId = 4,
                            Capacity = 8,
                            TableNumber = 4
                        },
                        new
                        {
                            TableId = 5,
                            Capacity = 2,
                            TableNumber = 5
                        });
                });

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.HasOne("BookingSystem.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingSystem.Models.Table", "Table")
                        .WithMany("Bookings")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("BookingSystem.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BookingSystem.Models.Table", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
